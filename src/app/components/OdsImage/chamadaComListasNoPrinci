import React, { useState } from "react";
import CheckboxInput from "./components/CheckboxInput"; // Ajuste o caminho conforme sua estrutura

const EmpresaForm = () => {
  // 1. Definindo a lista de opções de checkbox
  const checkboxOptions = [
    {
      id: "terms",
      name: "terms",
      label: "Concordo com os termos e condições",
      required: true,
    },
    {
      id: "newsletter",
      name: "newsletter",
      label: "Desejo receber newsletter",
      className: "mt-2", // Classe adicional específica para este item
    },
    {
      id: "privacy",
      name: "privacy",
      label: "Aceito a política de privacidade",
      required: true,
    },
    // Adicione mais opções conforme necessário
  ];

  // 2. Estado para armazenar as seleções
  const [selectedOptions, setSelectedOptions] = useState(() => {
    // Inicializa o estado com todas as opções como false
    const initialState = {};
    checkboxOptions.forEach((option) => {
      initialState[option.name] = false;
    });
    return initialState;
  });

  // 3. Função para lidar com mudanças nos checkboxes
  const handleCheckboxChange = (e) => {
    const { name, checked } = e.target;
    setSelectedOptions((prev) => ({
      ...prev,
      [name]: checked,
    }));
  };

  // 4. Função para enviar o formulário
  const handleSubmit = (e) => {
    e.preventDefault();
    // Aqui você pode usar os valores de selectedOptions
    console.log("Opções selecionadas:", selectedOptions);
    // Exemplo: enviar para API, armazenar no contexto, etc.
  };

  return (
    <form
      onSubmit={handleSubmit}
      className="max-w-md mx-auto p-6 bg-white rounded-lg shadow"
    >
      <h2 className="text-2xl font-bold mb-6 text-gray-800">
        Formulário de Empresa
      </h2>

      {/* Seção de campos normais (exemplo) */}
      <div className="mb-6">
        <label className="block text-gray-700 mb-2">Nome da Empresa</label>
        <input
          type="text"
          className="w-full px-3 py-2 border border-gray-300 rounded-md"
        />
      </div>

      {/* 5. Renderização dinâmica dos checkboxes */}
      <div className="space-y-3 mb-6">
        <h3 className="text-lg font-semibold text-gray-700 mb-3">Opções:</h3>

        {checkboxOptions.map((option) => (
          <CheckboxInput
            key={option.id}
            id={option.id}
            name={option.name}
            label={option.label}
            checked={selectedOptions[option.name]}
            onChange={handleCheckboxChange}
            required={option.required}
            className={`mb-3 ${option.className || ""}`} // Classes base + específicas
          />
        ))}
      </div>

      <button
        type="submit"
        className="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition"
      >
        Enviar Formulário
      </button>
    </form>
  );
};

export default EmpresaForm;
